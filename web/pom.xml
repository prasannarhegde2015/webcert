<?xml version="1.0"?>
<!--
  ~ Copyright (C) 2016 Inera AB (http://www.inera.se)
  ~
  ~ This file is part of sklintyg (https://github.com/sklintyg).
  ~
  ~ sklintyg is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ sklintyg is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>se.inera.intyg.webcert</groupId>
    <artifactId>webcert</artifactId>
    <version>5.0.0-b61</version>
  </parent>

  <artifactId>webcert-web</artifactId>
  <packaging>war</packaging>

  <name>Webcert (Web)</name>

  <properties>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
    <buildTimestamp>${maven.build.timestamp}</buildTimestamp>
    <sonar.javascript.lcov.reportPath>target/karma_coverage/lcov.info</sonar.javascript.lcov.reportPath>
    <sonar.exclusions>**/templates.js,**/vendor/*,**/app.min.js</sonar.exclusions>
    <skip.integration.tests>true</skip.integration.tests>
  </properties>

  <dependencies>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>webcert-persistence</artifactId>
    </dependency>
    <!--
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>hsa-integration</artifactId>
    </dependency>
    -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>pu-integration</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>pp-integration</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>fk-stub</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>fmb-integration</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>notification-stub</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>intygstjanst-stub</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>mail-stub</artifactId>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>notification-sender</artifactId>
    </dependency>

    <!-- Common -->
    <dependency>
      <groupId>se.inera.intyg.common</groupId>
      <artifactId>common-support</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.common</groupId>
      <artifactId>common-web</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.common</groupId>
      <artifactId>logging-util</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.common</groupId>
      <artifactId>hsa-integration</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.common</groupId>
      <artifactId>common-services</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.common</groupId>
      <artifactId>loggtjanst-stub</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.common</groupId>
      <artifactId>log-messages</artifactId>
    </dependency>

    <!--Intygstyper -->
    <dependency>
      <groupId>se.inera.intyg.intygstyper</groupId>
      <artifactId>fk7263</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.intygstyper</groupId>
      <artifactId>ts-bas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.intygstyper</groupId>
      <artifactId>ts-diabetes</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.intygstyper</groupId>
      <artifactId>sjukersattning</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.intygstyper</groupId>
      <artifactId>sjukpenning-utokad</artifactId>
    </dependency>

    <!-- RIVTA Schemas -->
    <dependency>
      <groupId>se.riv.clinicalprocess.healthcond.certificate</groupId>
      <artifactId>clinicalprocess-healthcond-certificate-schemas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.riv.insuranceprocess.healthreporting</groupId>
      <artifactId>insuranceprocess-healthreporting-schemas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.riv.itintegration.monitoring</groupId>
      <artifactId>itintegration-monitoring-schemas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.riv.ehr.logstore</groupId>
      <artifactId>ehr-logstore-schemas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.riv.processmanagement.decisionsupport.insurancemedicinedecisionsupport</groupId>
      <artifactId>processmanagement-decisionsupport-insurancemedicinedecisionsupport-schemas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.riv.infrastructure.directory.employee</groupId>
      <artifactId>infrastructure-directory-employee-schemas</artifactId>
    </dependency>

    <!-- Intyg Schemas -->
    <dependency>
      <groupId>se.inera.intyg.insuranceprocess.healthreporting</groupId>
      <artifactId>intyg-insuranceprocess-healthreporting-schemas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.transportstyrelsen</groupId>
      <artifactId>intyg-transportstyrelsen-schemas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.infrastructure.directory.privatepractitioner.terms</groupId>
      <artifactId>intyg-infrastructure-directory-privatepractitioner-terms-schemas</artifactId>
    </dependency>

    <!-- CGI GRP schema -->
    <dependency>
      <groupId>se.funktionstjanster.grp</groupId>
      <artifactId>funktionstjanster-grp-schemas</artifactId>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
    </dependency>

    <!-- Webjars -->
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>angularjs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>angular-ui-bootstrap</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>angular-ui-router</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap</artifactId>
    </dependency>

    <!-- AOP -->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
    </dependency>

    <!-- Utility libs -->
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- Misc -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.google.auto.value</groupId>
      <artifactId>auto-value</artifactId>
      <version>1.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>apache-jstl</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-jms_1.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- XML -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
    </dependency>

    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
    </dependency>

    <!-- Spring family -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jms</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-taglibs</artifactId>
    </dependency>

    <!-- Authentication -->
    <dependency>
      <groupId>org.springframework.security.extensions</groupId>
      <artifactId>spring-security-saml2-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>opensaml</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>openws</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>xmltooling</artifactId>
    </dependency>

    <!-- Lucene -->
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-analyzers-common</artifactId>
    </dependency>

    <!-- Experiment with Swagger -->
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-jaxrs</artifactId>
      <version>1.5.4</version>
      <exclusions>
       <exclusion>
         <artifactId>jsr311-api</artifactId>
         <groupId>javax.ws.rs</groupId>
       </exclusion>
      </exclusions>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kubek2k</groupId>
      <artifactId>springockito</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>json-schema-validator</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>webcert</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/version.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/version.properties</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <packagingExcludes>**/*.page.js,**/*.spec.js,**/*.test.js,**/karma*.conf.js,**/karma*.conf.ci.js</packagingExcludes>
          <webResources>
            <resource>
              <directory>target/webapp</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <executions>
          <!-- integration tests execution to start/deploy/stop jetty at right phase to work with failsafe -->
          <execution>
            <id>start-jetty</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <!-- We don't want to start jetty if wer'e not running integration tests-->
              <skip>${skip.integration.tests}</skip>
            </configuration>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <webAppConfig>
            <contextPath>/</contextPath>
            <resourceBases>
              <resourceBase>${basedir}/src/main/webapp</resourceBase>
              <resourceBase>${basedir}/target/webapp/</resourceBase>
            </resourceBases>
          </webAppConfig>
          <contextXml>${basedir}/src/main/webapp/WEB-INF/jetty-web.xml</contextXml>
          <systemProperties>
            <systemProperty>
              <name>spring.profiles.active</name>
              <value>${system.mode}</value>
            </systemProperty>
            <systemProperty>
              <name>webcert.resources.folder</name>
              <value>${basedir}/../src/main/resources</value>
            </systemProperty>
            <systemProperty>
              <name>jetty.port</name>
              <value>9088</value>
            </systemProperty>
            <systemProperty>
              <name>java.awt.headless</name>
              <value>true</value>
            </systemProperty>
            <systemProperty>
              <name>catalina.base</name>
              <value>${project.build.directory}/catalina.base</value>
            </systemProperty>
            <systemProperty>
              <name>credentials.file</name>
              <value>${project.basedir}/webcert-credentials.properties</value>
            </systemProperty>
            <systemProperty>
              <name>webcert.config.file</name>
              <value>${project.basedir}/webcert-dev.properties</value>
            </systemProperty>
            <systemProperty>
              <name>webcert.logback.file</name>
              <value>${project.basedir}/webcert-logback.xml</value>
            </systemProperty>
          </systemProperties>
          <stopKey>stop</stopKey>
          <stopPort>9099</stopPort>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-broker</artifactId>
            <version>${activemq.version}</version>
          </dependency>
          <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-kahadb-store</artifactId>
            <version>${activemq.version}</version>
          </dependency>
          <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-jms_1.1_spec</artifactId>
            <version>${geronimo-jms-specs.version}</version>
          </dependency>
          <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <version>${commons-dbcp2.version}</version>
          </dependency>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.connector.version}</version>
          </dependency>
          <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2db.connector.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-webjar-dependencies</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>org.webjars,se.inera.intyg.intygstyper,se.inera.intyg.common</includeGroupIds>
              <excludeArtifactIds>common-pom,logging-util</excludeArtifactIds>
              <outputDirectory>${project.build.directory}/webjardependenciestemp</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-test-resources</phase>
            <configuration>
              <target>
                <copy todir="${project.build.directory}/webjardependencies"
                  verbose="false">
                  <regexpmapper from="^(.*)[/\\].*[/\\](.*)$$"
                    to="\1/\2" />
                  <fileset
                    dir="${project.build.directory}/webjardependenciestemp/META-INF/resources/webjars/">
                  </fileset>
                </copy>
                <copy
                  todir="${project.build.directory}/webjardependencies/common"
                  verbose="false">
                  <fileset
                    dir="${project.build.directory}/webjardependenciestemp/META-INF/resources/webjars/common">
                  </fileset>
                </copy>
                <copy
                  todir="${project.build.directory}/webjardependencies/fk7263"
                  verbose="false">
                  <fileset
                    dir="${project.build.directory}/webjardependenciestemp/META-INF/resources/webjars/fk7263">
                  </fileset>
                </copy>
                <copy
                  todir="${project.build.directory}/webjardependencies/ts-bas"
                  verbose="false">
                  <fileset
                    dir="${project.build.directory}/webjardependenciestemp/META-INF/resources/webjars/ts-bas">
                  </fileset>
                </copy>
                <copy
                    todir="${project.build.directory}/webjardependencies/luse"
                    verbose="false">
                  <fileset
                      dir="${project.build.directory}/webjardependenciestemp/META-INF/resources/webjars/luse">
                  </fileset>
                </copy>
                <copy
                    todir="${project.build.directory}/webjardependencies/lisu"
                    verbose="false">
                  <fileset
                      dir="${project.build.directory}/webjardependenciestemp/META-INF/resources/webjars/lisu">
                  </fileset>
                </copy>
                <!--
                <copy
                  todir="${project.build.directory}/webjardependencies/ts-diabetes"
                  verbose="false">
                  <fileset
                    dir="${project.build.directory}/webjardependenciestemp/META-INF/resources/webjars/ts-diabetes">
                  </fileset>
                </copy>
                 -->
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>${node.version}</nodeVersion>
              <npmVersion>${npm.version}</npmVersion>
              <nodeDownloadRoot>https://build-inera.nordicmedtest.se/node/</nodeDownloadRoot>
              <npmDownloadRoot>https://build-inera.nordicmedtest.se/node/npm/</npmDownloadRoot>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>grunt build</id>
            <goals>
              <goal>grunt</goal>
            </goals>
          </execution>
          <execution>
            <id>javascript tests</id>
            <goals>
              <goal>karma</goal>
            </goals>
            <configuration>
              <karmaConfPath>${project.basedir}/src/main/resources/karma.conf.ci.js --skip-coverage=${skip-coverage}
              </karmaConfPath>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Run unit tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- Always exclude integration tests when unit tests are run -->
          <excludes>
            <exclude>**/IT*.java</exclude>
          </excludes>
        </configuration>
      </plugin>

      <!-- Runs integration tests (unless skip.integration.tests=true) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.19</version><!--TODO: move versioning to common-pom -->
        <executions>
          <execution>
            <id>integration-tests</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <skipTests>${skip.integration.tests}</skipTests>
              <systemPropertyVariables>
                <integration.tests.baseUrl>http://localhost:9088/</integration.tests.baseUrl>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>local</id>
      <properties>
        <system.mode>local</system.mode>
      </properties>
    </profile>

    <profile>
      <id>v3.0</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-release-features</id>
                <phase>process-resources</phase>
                <configuration>
                  <target>
                    <copy
                        file="${project.basedir}/../src/main/releases/v3.0/features.properties"
                        tofile="${project.build.outputDirectory}/features.properties"
                        overwrite="true" />
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>v4.1</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-release-features</id>
                <phase>process-resources</phase>
                <configuration>
                  <target>
                    <copy
                        file="${project.basedir}/../src/main/releases/v4.1/features.properties"
                        tofile="${project.build.outputDirectory}/features.properties"
                        overwrite="true" />
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- integration-test profile that overrides project default test execution flags.
      This will also trigger the startup of jetty in preparation of integration-test execution.
      -->
    <profile>
      <id>integration-test</id>
      <properties>
        <skip.integration.tests>false</skip.integration.tests>
      </properties>
    </profile>
  </profiles>

</project>
