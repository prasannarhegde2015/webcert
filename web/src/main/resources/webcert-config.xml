<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:http="http://cxf.apache.org/transports/http/configuration"
  xmlns:sec="http://cxf.apache.org/configuration/security" xmlns:task="http://www.springframework.org/schema/task"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
        http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
        http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd 
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

  <import resource="classpath:/webcert-common-config.xml" />
  <import resource="classpath:/repository-context.xml" />
  <import resource="security/securityContext.xml" />
  <import resource="classpath:/hsa-services-config.xml" />
  <import resource="classpath:/fmb-services-config.xml" />
  <import resource="classpath:/pu-services-config.xml" />
  <import resource="classpath:/pp-services-config.xml" />
  <import resource="classpath:/pp-stub-context.xml" />
  <import resource="jms-config.xml" />
  <import resource="ws-config.xml" />
  <import resource="mail-config.xml" />
  <import resource="classpath:/mail-stub-context.xml" />
  <import resource="classpath*:module-config.xml" />
  <import resource="classpath*:wc-module-cxf-servlet.xml" />
  <import resource="classpath:/notification-sender-config.xml" />
  <import resource="classpath:/certificate-sender-config.xml" />

  <context:annotation-config />
  
  <context:component-scan base-package="se.inera.intyg.webcert.web">
    <context:exclude-filter type="regex" expression="se\.inera\.intyg\.webcert\.web\.auth.*"/>
  </context:component-scan>

  <beans>
    <!-- All config files must be present in other modes than dev -->
    <context:property-placeholder
      location="file:${credentials.file}"
      order="1" ignore-unresolvable="true"/>
    <util:properties id="webcertProps" location="file:${webcert.config.file}"/>
    <context:property-placeholder
        properties-ref="webcertProps"
        order="2" ignore-unresolvable="true"/>

    <!-- Remove when REST-api is used to serve config to frontend! -->
    <!-- This ugliness is needed in order for dashboard.jsp to get an id from which to evaluate a property -->
    <util:properties id="defaultProps" location="classpath:default.properties"/>
    <context:property-placeholder
        properties-ref="defaultProps"
        order="3" ignore-unresolvable="false"/>
    <!-- Remove when REST-api is used to serve config to frontend! -->
    <!-- This configuration solves WEBCERT-2249 -->
    <bean id="webcertProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
      <property name="singleton" value="true" />
      <property name="properties">
        <props>
          <prop key="privatepractitioner.portal.registration.url">${privatepractitioner.portal.registration.url}</prop>
          <prop key="certificate.view.url.base">${certificate.view.url.base}</prop>
        </props>
      </property>
    </bean>
  </beans>
  
  <beans profile="dev,wc-init-data">
    <!-- In dev mode we bootstrap data -->
    <bean id="FragaSvarBootstrapBean" class="se.inera.intyg.webcert.web.service.util.FragaSvarBootstrapBean" />
    <bean id="IntegreradeEnheterBootstrapBean" class="se.inera.intyg.webcert.web.service.util.IntegreradeEnheterBootstrapBean" />
  </beans>

  <beans profile="!dev">
    <util:properties id="webcertFeatures" location="classpath:/features.properties" />
  </beans>
  <beans profile="dev">
    <util:properties id="webcertFeatures" location="classpath:/features.properties,classpath:/features-dev.properties" />
  </beans>

  <beans>
    <context:property-placeholder
      location="classpath:webcert-notification-route-params.properties, classpath:webcert-certificate-route-params.properties, classpath:default.properties, classpath:version.properties"
      order="2" ignore-resource-not-found="false" />

    <bean id="moduleRegistry" class="se.inera.intyg.common.support.modules.registry.IntygModuleRegistryImpl">
      <property name="origin" value="WEBCERT" />
    </bean>

    <bean id="messageSource"
      class="org.springframework.context.support.ResourceBundleMessageSource">
      <property name="defaultEncoding" value="UTF-8" />
      <property name="basenames">
        <list>
          <value>ui</value>
          <value>version</value>
        </list>
      </property>
    </bean>

    <bean id="avtalService" class="se.inera.intyg.webcert.web.service.privatlakaravtal.AvtalServiceImpl"/>

    <!-- Exposes healthCheckService for use in health-check.jsp -->
    <bean
      class="org.springframework.web.context.support.ServletContextAttributeExporter">
      <property name="attributes">
        <map>
          <entry key="healthcheck" value-ref="healthCheckService" />
          <!-- AvtalService not required anymore? -->
          <entry key="avtalservice" value-ref="avtalService" />
        </map>
      </property>
    </bean>

    <bean id="savedRequestFactory" class="se.inera.intyg.webcert.web.auth.SavedRequestFactoryImpl"/>

    <bean id="idpSelectionFilter" class="se.inera.intyg.webcert.web.auth.IdpSelectionFilter">
        <property name="savedRequestFactory" ref="savedRequestFactory"/>
    </bean>

    <!-- Declare the TermsFilter so it can be managed by the Spring context using DelegatingFilterProxy -->
    <bean id="termsFilter" class="se.inera.intyg.webcert.web.auth.TermsFilter"/>

    <!-- Eleg login redirect filter for easier URL handling in PP -->
    <bean id="elegRedirectFilter" class="se.inera.intyg.webcert.web.auth.eleg.ElegRedirectFilter" />

    <!-- JSON mappers and providers -->
    <bean id="objectMapper"
      class="se.inera.intyg.common.util.integration.integration.json.CustomObjectMapper" />

    <bean id="jacksonJsonProvider"
      class="com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider">
      <property name="mapper">
        <bean class="se.inera.intyg.common.util.integration.integration.json.CustomObjectMapper" />
      </property>
    </bean>

    <!-- Handlers for REST services -->
    <bean id="webcertRestExceptionHandler"
      class="se.inera.intyg.webcert.web.web.handlers.WebcertRestExceptionHandler" />

    <bean id="localDateTimeHandler" class="se.inera.intyg.webcert.web.web.handlers.LocalDateTimeHandler" />

    <!-- Thread pool for BankID GRP collect tasks. TODO tweak properties -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
      <property name="corePoolSize" value="5" />
      <property name="maxPoolSize" value="10" />
      <property name="queueCapacity" value="25" />
    </bean>
  </beans>

</beans>
